{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();\n}\nvar _default = bytesToUuid;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","byteToHex","i","push","toString","substr","bytesToUuid","buf","offset","bth","toLowerCase","_default"],"sources":["/home/androo/Workspace/React/React/RozdziaÅ‚ 6/node_modules/uuid/dist/bytesToUuid.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset) {\n  const i = offset || 0;\n  const bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();\n}\n\nvar _default = bytesToUuid;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;;AAExB;AACA;AACA;AACA;AACA,IAAMC,SAAS,GAAG,EAAE;AAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAAE;EAC5BD,SAAS,CAACE,IAAI,CAAC,CAACD,CAAC,GAAG,KAAK,EAAEE,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpD;AAEA,SAASC,WAAWA,CAACC,GAAG,EAAEC,MAAM,EAAE;EAChC,IAAMN,CAAC,GAAGM,MAAM,IAAI,CAAC;EACrB,IAAMC,GAAG,GAAGR,SAAS,CAAC,CAAC;EACvB;;EAEA,OAAO,CAACQ,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,GAAGO,GAAG,CAACF,GAAG,CAACL,CAAC,GAAG,EAAE,CAAC,CAAC,EAAEQ,WAAW,EAAE;AACpV;AAEA,IAAIC,QAAQ,GAAGL,WAAW;AAC1BR,OAAO,CAACE,OAAO,GAAGW,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}